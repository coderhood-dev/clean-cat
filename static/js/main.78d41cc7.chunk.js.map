{"version":3,"sources":["components/Loading.js","components/Api.js","utils/context.js","components/UserName.js","components/Categories.js","components/Home.js","components/RandomCat.js","components/UserNameForm.js","components/About.js","assets/logoApp.svg","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Loading","color","RandomCat","useState","loading","setLoading","images","setImages","useEffect","fetchImage","a","fetch","response","json","d","w","justifyContent","src","url","alt","boxSize","objectFit","SessionContext","React","createContext","userName","setUserName","name","SessionProvider","children","Provider","value","UserName","sessionProvider","useContext","Categories","setValue","categories","setCategories","fetchCategories","borderWidth","borderRadius","overflow","mb","onChange","direction","spacing","padding","Home","className","UserNameForm","setName","onSubmit","e","preventDefault","m","maxW","placeholder","target","type","About","Header","bg","p","alignItems","logoApp","variant","to","exact","colorScheme","App","basename","path","component","align","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78d41cc7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Spinner } from \"@chakra-ui/react\";\n\nconst Loading = () => {\n  return (\n    <Box>\n      <Spinner color=\"red.500\" />\n      <h1>loading...</h1>\n    </Box>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Image } from \"@chakra-ui/react\";\nimport Loading from \"./Loading\";\n\nconst url = \"https://api.thecatapi.com/v1/images/search\";\n\nfunction RandomCat() {\n  const [loading, setLoading] = useState(true);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    fetchImage();\n  }, []);\n\n  const fetchImage = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const images = await response.json();\n      setImages(images);\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Box d=\"flex\" w=\"100%\" justifyContent=\"center\">\n      <Image\n        src={images[0].url}\n        alt=\"kitty\"\n        boxSize=\"600px\"\n        objectFit=\"cover\"\n      />\n    </Box>\n  );\n}\n\nexport default RandomCat;\n","import React, { useState } from \"react\";\n\n// Se define el Context con un valor inicial\nexport const SessionContext = React.createContext({\n  userName: \"User\",\n  setUserName: (name) => {},\n});\n\n// Se crea un componente SessionProvider que maneja los datos del Context y\n// envuelve con el Provider a todos sus hijos\nconst SessionProvider = ({ children }) => {\n  const [userName, setUserName] = useState(\"User\");\n  return (\n    <SessionContext.Provider\n      // datos y funciones que tiene el Context\n      value={{\n        userName,\n        setUserName: (name) => setUserName(name),\n      }}\n    >\n      {children}\n    </SessionContext.Provider>\n  );\n};\n\nexport default SessionProvider;\n","import React, { useContext } from \"react\";\nimport { Text } from \"@chakra-ui/react\";\nimport { SessionContext } from \"../utils/context\";\n\nconst UserName = () => {\n  // con el hook useContext se puede usar todo lo que este dentro del contexto\n  const sessionProvider = useContext(SessionContext);\n  return <Text>{sessionProvider.userName}</Text>;\n};\n\nexport default UserName;\n","import React, { useState, useEffect } from \"react\";\nimport { Radio, RadioGroup, Stack, Box } from \"@chakra-ui/react\";\nimport Loading from \"./Loading\";\n\nconst url = \"https://api.thecatapi.com/v1/categories\";\n\nconst Categories = () => {\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState(\"1\");\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const categories = await response.json();\n      setCategories(categories);\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" mb=\"15px\">\n        <RadioGroup onChange={setValue} value={value}>\n          <Stack direction=\"row\" spacing={5} padding=\"1px 8px\">\n            <Radio value=\"0\">all</Radio>\n            <Radio value=\"1\">{categories[0].name}</Radio>\n            <Radio value=\"2\">{categories[1].name}</Radio>\n            <Radio value=\"3\">{categories[2].name}</Radio>\n            <Radio value=\"4\">{categories[3].name}</Radio>\n            <Radio value=\"5\">{categories[4].name}</Radio>\n            <Radio value=\"6\">{categories[5].name}</Radio>\n            <Radio value=\"7\">{categories[6].name}</Radio>\n          </Stack>\n        </RadioGroup>\n      </Box>\n    </>\n  );\n};\n\nexport default Categories;\n","import RandomCat from \"./Api\";\nimport UserName from \"./UserName\";\nimport Categories from \"./Categories\";\n\nexport const Home = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Categories />\n        <RandomCat />\n        <UserName />\n      </header>\n    </div>\n  );\n};\n","export const RandomCat = () => {\n  return (\n    <>\n      <h1>Random Cats</h1>\n    </>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Input, Button, Stack, Text } from \"@chakra-ui/react\";\nimport { SessionContext } from \"../utils/context\";\n\nconst UserNameForm = () => {\n  const sessionProvider = useContext(SessionContext);\n  // Usa el userName del context como valor inicial\n  const [name, setName] = useState(sessionProvider.userName);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Usa la funcion que nos da el Context para cambiar el valor del userName\n    sessionProvider.setUserName(name);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Stack m=\"8\" maxW=\"460px\" spacing=\"2\">\n        <Text>Enter new name</Text>\n        {/* Usa un controlled input https://chakra-ui.com/docs/form/input#controlled-input */}\n        <Input\n          placeholder=\"User name\"\n          value={name}\n          onChange={handleNameChange}\n        />\n        <Button type=\"submit\">Change user name</Button>\n      </Stack>\n    </form>\n  );\n};\n\nexport default UserNameForm;\n","import React from \"react\";\nimport UserNameForm from \"./UserNameForm\";\n\nexport const About = () => {\n  return (\n    <>\n      <h1>about</h1>\n      <UserNameForm />\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logoApp.ded2b20d.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Flex, Spacer, Box, Button, ButtonGroup } from \"@chakra-ui/react\";\nimport logoApp from \"../assets/logoApp.svg\";\nimport UserName from \"./UserName\";\n\nconst Header = () => {\n  return (\n    <Box bg=\"#0091C7\" w=\"100%\" p=\"1rem\">\n      <Flex alignItems=\"center\">\n        <img src={logoApp} alt=\"Logo\" />\n        <Spacer />\n        <ButtonGroup variant=\"outline\" spacing=\"6\">\n          <Link to=\"/\" exact>\n            <Button colorScheme=\"#15222A\" variant=\"link\">\n              Home\n            </Button>\n          </Link>\n          <Link to=\"/about\">\n            <Button colorScheme=\"#15222A\" variant=\"link\">\n              About\n            </Button>\n          </Link>\n          <Link to=\"/random-cat\">\n            <Button colorScheme=\"#15222A\" variant=\"link\">\n              Random Cat\n            </Button>\n          </Link>\n          <UserName />\n        </ButtonGroup>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Header;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { RandomCat } from \"./RandomCat\";\nimport { About } from \"./About\";\nimport Header from \"./Header\";\nimport \"../App.css\";\n\nfunction App() {\n  return (\n    <Router basename=\"/clean-cat\">\n      <Header />\n      <Switch>\n        <Route path=\"/random-cat\">\n          <RandomCat />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route\n          path=\"*\"\n          component={() => (\n            <div align=\"center\">\n              404\n              <br />\n              <a href=\"/clean-cat\" alt=\"home\">\n                go home\n              </a>\n            </div>\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport SessionProvider from \"./utils/context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      {/* Todos los componenetes hijos del SessionProvider tienen acceso a los\n          datos dentro del Context */}\n      <SessionProvider>\n        <App />\n      </SessionProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}